#!/usr/bin/env bash
#
# b-rem - 'birthday reminder'
# Take a list of birthdays in the format:
# "yyyy-mm-dd, [name]"
# Print the next 3
# LICENCE: GPL
# Hugh Carroll hughie@carrollonline.co.uk

DATAFILE="$HOME/crypt/birthdays"

# store 'now' as month and day with leading zeroes stripped
TODAY=$(date +%Y-%m-%d)
THISMONTH=$(date +%m | sed 's/^0*//')
THISDAY=$(date +%d | sed 's/^0*//')

# store the default IFS ('internal field separator')
# and replace it with an empty string
# if we don't do this the lines break at commas
OLD_IFS="$IFS"
IFS=$'\n'

# sort by month, then day, then year and store as an array
BIRTHDAYS=( $(sort --field-separator=- -k2 -k3 -k1 $DATAFILE) )

declare -a BEFORE=()
declare -a AFTER=()

for b in "${BIRTHDAYS[@]}"; do
	# store just the date part of each line
	DT=$( echo $b | cut -d ',' -f1 )

	# get the month and day out of it
	M=$( printf '%s' $DT | cut -d '-' -f2 | sed 's/^0*//' )
	D=$( printf '%s' $DT | cut -d '-' -f3 | sed 's/^0*//' )

	# put birthday dates that are great than or equal to 'today' into
	# an 'after' array, other into a 'before' array
	if [[ (( $M -ge $THISMONTH )) && (( $D -ge $THISDAY)) ]]; then
		AFTER[${#AFTER[@]}]=$b
	else
		BEFORE[${#BEFORE[@]}]=$b
	fi
done

# merge the 'after' and 'before' arrays
NEXT=("${AFTER[@]}" "${BEFORE[@]}")

# output the next 3 birthdays
for i in {0..2}; do
	echo "${NEXT[$i]}" 
done

# restore the IFS to default
IFS="$OLD_IFS"
